## Autogenerated by Scribe. DO NOT MODIFY.

name: Authentication
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: register
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Display Registration View

        Show the registration view for new users to create an account.
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            // Rendered view for user registration.
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: register
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Handle Registration Request

        Validate the registration details and create a new user account.
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Le champ value ne doit pas être supérieur à 255 caractères.'
        required: true
        example: pxffqavvbmpjaycudsxgncvld
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      email:
        name: email
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      terms:
        name: terms
        description: 'Must be accepted.'
        required: true
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      name: pxffqavvbmpjaycudsxgncvld
      password: et
      terms: true
    fileParameters: []
    responses:
      -
        status: 302
        content: 'Redirect response to the company registration route.'
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "errors": {
              "name": [
                "The name field is required."
              ],
              "email": [
                "The email address is not valid or is already taken."
              ],
              "password": [
                "The password confirmation does not match."
              ],
              "terms": [
                "You must accept the terms and conditions."
              ]
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'user-register/{token}'
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Display User Registration View

        Show the registration view for users who have received a registration token.
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      token:
        name: token
        description: ''
        required: true
        example: iure
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      token: iure
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "user": {
              "id": 1,
              "name": "John Doe",
              "email": "johndoe@example.com",
              "company": {
                "id": 1,
                "name": "Example Company"
              }
            }
            // Rendered view for user registration.
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: user-register
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Handle User Registration Request

        Validate the registration details and complete the registration process for the user.
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      password:
        name: password
        description: ''
        required: true
        example: temporibus
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      terms:
        name: terms
        description: 'Must be accepted.'
        required: true
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
      token:
        name: token
        description: ''
        required: true
        example: sit
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      password: temporibus
      terms: true
      token: sit
    fileParameters: []
    responses:
      -
        status: 302
        content: 'Redirect response to the dashboard.'
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "errors": {
              "password": [
                "The password confirmation does not match."
              ],
              "terms": [
                "You must accept the terms and conditions."
              ],
              "token": [
                "The registration token is required."
              ],
              "avatar": [
                "The avatar must be an image of type jpeg, png, jpg, gif, or svg and must not exceed 2048 kilobytes."
              ]
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: login
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Show Login Form

        Display the login form to the user.
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "canResetPassword": true,
            "status": null
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: login
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Handle Authentication Request

        Authenticate the user and redirect to the intended location or dashboard.
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Le champ value doit être une adresse e-mail valide.'
        required: true
        example: kobe.conn@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: '5L~/G{Zc0'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      email: kobe.conn@example.com
      password: '5L~/G{Zc0'
    fileParameters: []
    responses:
      -
        status: 302
        content: 'Redirect response to the intended route.'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: forgot-password
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Display Password Reset Link Request View

        Show the view where users can request a password reset link.
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "some-status"
            // Rendered view for requesting a password reset link.
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: forgot-password
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Handle Password Reset Link Request

        Validate the email address and handle the request to send a password reset link.
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Le champ value doit être une adresse e-mail valide.'
        required: true
        example: reuben83@example.net
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      email: reuben83@example.net
    fileParameters: []
    responses:
      -
        status: 302
        content: 'Redirect response back to the previous page with a status message.'
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "errors": {
              "email": [
                "The email address is not valid or does not exist."
              ]
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'reset-password/{token}'
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Display Password Reset View

        Show the password reset view to the user, prefilled with email and token.
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      token:
        name: token
        description: ''
        required: true
        example: vel
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      token: vel
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "email": "user@example.com",
            "token": "reset-token-value"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: reset-password
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Handle New Password Request

        Validate and handle the request to reset the user's password.
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      token:
        name: token
        description: ''
        required: true
        example: dignissimos
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      email:
        name: email
        description: 'Le champ value doit être une adresse e-mail valide.'
        required: true
        example: kathlyn.shields@example.org
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      token: dignissimos
      email: kathlyn.shields@example.org
      password: et
    fileParameters: []
    responses:
      -
        status: 302
        content: 'Redirect response to the login route with a status message.'
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "errors": {
              "email": [
                "The provided email is incorrect or expired."
              ],
              "password": [
                "The password confirmation does not match."
              ]
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: verify-email
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Display Email Verification Prompt

        Display the email verification prompt if the user's email is not verified,
        otherwise redirect to the dashboard.
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'null'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "verification-link-sent"
            // Rendered view for email verification prompt.
          }
        headers: []
        description: ''
        custom: []
      -
        status: 302
        content: 'Redirect response to the dashboard if the email is verified.'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 61gdfbE6VcaDPke3hZav584
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'verify-email/{id}/{hash}'
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Mark Email as Verified

        Mark the authenticated user's email address as verified.
        If the email is already verified, redirect to the dashboard with a `verified` query parameter.
        If the email is not verified, mark it as verified and trigger the Verified event.
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'null'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the verify email.'
        required: true
        example: sunt
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      hash:
        name: hash
        description: ''
        required: true
        example: quia
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: sunt
      hash: quia
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Email verified successfully."
            // Redirects to the dashboard with `?verified=1` if the email is verified.
          }
        headers: []
        description: ''
        custom: []
      -
        status: 302
        content: 'Redirect response to the dashboard with a `verified` query parameter.'
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: |-
          {
            "message": "Unauthorized"
            // If the request is made by a user who is not authenticated.
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - EbfZd6e3546VPDaa18vhkcg
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: email/verification-notification
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Send Email Verification Notification

        Send a new email verification notification to the user if their email is not verified.
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'null'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "verification-link-sent"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 302
        content: 'Redirect response back to the previous page with a status message.'
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: |-
          {
            "message": "You are not authorized to access this resource."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - Dgh6Vdcvb15aE3Z8k4ePfa6
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: confirm-password
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Show Confirm Password View

        Display the view for confirming the user's password.
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'null'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            // Rendered view for password confirmation.
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - ae3f4bkvEd5h6gZcP18V6aD
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: confirm-password
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Confirm User's Password

        Validate the user's password to confirm their identity.
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'null'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 302
        content: 'Redirect response to the intended route.'
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "errors": {
              "password": [
                "The provided password is incorrect."
              ]
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 815dEavaDPk6chfeb6Z43gV
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: password
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Update User's Password

        Validate and update the user's password.
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'null'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      current_password:
        name: current_password
        description: ''
        required: true
        example: voluptas
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: eveniet
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      current_password: voluptas
      password: eveniet
    fileParameters: []
    responses:
      -
        status: 302
        content: 'Redirect response back to the previous page.'
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "errors": {
              "current_password": [
                "The current password is incorrect."
              ],
              "password": [
                "The password confirmation does not match."
              ]
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - v8PcfDEb1Zgkdh664Vea53a
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: logout
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Logout and Destroy Session

        Logout the authenticated user and destroy the session.
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'null'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 302
        content: 'Redirect response to the home page.'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - Vb168eZ3vfgah4aP6E5dDck
    controller: null
    method: null
    route: null
    custom: []
